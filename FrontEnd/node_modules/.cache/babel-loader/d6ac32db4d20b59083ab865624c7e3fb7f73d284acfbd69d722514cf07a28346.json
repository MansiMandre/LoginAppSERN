{"ast":null,"code":"// import React, { createContext, useState, useEffect } from 'react';\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n\n//   // On app load, check localStorage for user data\n//   useEffect(() => {\n//     const storedUser = JSON.parse(localStorage.getItem('user'));\n//     console.log(storedUser, 'storedUser');\n\n//     if (storedUser) {\n//       setUser(storedUser); // Set the user if it exists in localStorage\n//     }\n//   }, []);\n\n//   const login = (userData) => {\n//     localStorage.setItem('user', JSON.stringify(userData)); // Save the user data in localStorage\n//     setUser(userData); // Update state with user data\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem('user'); // Remove user from localStorage\n//     setUser(null); // Set user to null when logging out\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default AuthContext;","map":{"version":3,"names":[],"sources":["E:/LoginInExpress/login-app/src/AuthContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   // On app load, check localStorage for user data\r\n//   useEffect(() => {\r\n//     const storedUser = JSON.parse(localStorage.getItem('user'));\r\n//     console.log(storedUser, 'storedUser');\r\n    \r\n//     if (storedUser) {\r\n//       setUser(storedUser); // Set the user if it exists in localStorage\r\n//     }\r\n//   }, []);\r\n\r\n//   const login = (userData) => {\r\n//     localStorage.setItem('user', JSON.stringify(userData)); // Save the user data in localStorage\r\n//     setUser(userData); // Update state with user data\r\n//   };\r\n\r\n//   const logout = () => {\r\n//     localStorage.removeItem('user'); // Remove user from localStorage\r\n//     setUser(null); // Set user to null when logging out\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default AuthContext;\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}