{"ast":null,"code":"var _jsxFileName = \"E:\\\\LoginInExpress\\\\login-app\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // On app load, check localStorage for user data\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser) {\n      setUser(storedUser); // Set the user if it exists in localStorage\n    }\n  }, []);\n  const login = userData => {\n    localStorage.setItem('user', JSON.stringify(userData)); // Save the user data in localStorage\n    setUser(userData); // Update state with user data\n  };\n  const logout = () => {\n    localStorage.removeItem('user'); // Remove user from localStorage\n    setUser(null); // Set user to null when logging out\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n// Middleware to authenticate the JWT token\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nfunction authenticateToken(req, res, next) {\n  var _req$header;\n  const token = (_req$header = req.header('Authorization')) === null || _req$header === void 0 ? void 0 : _req$header.split(' ')[1]; // Get the token from the \"Authorization\" header\n\n  if (!token) {\n    return res.status(401).send('Access denied, no token provided');\n  }\n  jwt.verify(token, process.env.SESSION_SECRET, (err, user) => {\n    if (err) {\n      return res.status(403).send('Invalid token');\n    }\n    req.user = user; // Attach the user to the request object\n    next();\n  });\n}\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","JSON","parse","localStorage","getItem","login","userData","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","authenticateToken","req","res","next","_req$header","token","header","split","status","send","jwt","verify","process","env","SESSION_SECRET","err","$RefreshReg$"],"sources":["E:/LoginInExpress/login-app/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // On app load, check localStorage for user data\r\n  useEffect(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if (storedUser) {\r\n      setUser(storedUser); // Set the user if it exists in localStorage\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    localStorage.setItem('user', JSON.stringify(userData)); // Save the user data in localStorage\r\n    setUser(userData); // Update state with user data\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user'); // Remove user from localStorage\r\n    setUser(null); // Set user to null when logging out\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n// Middleware to authenticate the JWT token\r\nfunction authenticateToken(req, res, next) {\r\n  const token = req.header('Authorization')?.split(' ')[1]; // Get the token from the \"Authorization\" header\r\n\r\n  if (!token) {\r\n    return res.status(401).send('Access denied, no token provided');\r\n  }\r\n\r\n  jwt.verify(token, process.env.SESSION_SECRET, (err, user) => {\r\n    if (err) {\r\n      return res.status(403).send('Invalid token');\r\n    }\r\n    req.user = user; // Attach the user to the request object\r\n    next();\r\n  });\r\n}\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAE3D,IAAIJ,UAAU,EAAE;MACdD,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAIC,QAAQ,IAAK;IAC1BH,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxDP,OAAO,CAACO,QAAQ,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjCX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEO,KAAK;MAAEI;IAAO,CAAE;IAAAb,QAAA,EAClDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AACD;AAAAnB,EAAA,CA5BaF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA6BzB,SAASuB,iBAAiBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EAAA,IAAAC,WAAA;EACzC,MAAMC,KAAK,IAAAD,WAAA,GAAGH,GAAG,CAACK,MAAM,CAAC,eAAe,CAAC,cAAAF,WAAA,uBAA3BA,WAAA,CAA6BG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1D,IAAI,CAACF,KAAK,EAAE;IACV,OAAOH,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,kCAAkC,CAAC;EACjE;EAEAC,GAAG,CAACC,MAAM,CAACN,KAAK,EAAEO,OAAO,CAACC,GAAG,CAACC,cAAc,EAAE,CAACC,GAAG,EAAEnC,IAAI,KAAK;IAC3D,IAAImC,GAAG,EAAE;MACP,OAAOb,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;IAC9C;IACAR,GAAG,CAACrB,IAAI,GAAGA,IAAI,CAAC,CAAC;IACjBuB,IAAI,CAAC,CAAC;EACR,CAAC,CAAC;AACJ;AAEA,eAAe3B,WAAW;AAAC,IAAAuB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}